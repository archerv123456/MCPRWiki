{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the (Unoffical) MCPReborn wiki!","text":"<p>Here you can find guides and resources to help you get started with Minecraft Coder Pack Reborn!</p> <p>This is my first wiki ever, so its probably very lack luster and clunky.</p>"},{"location":"guides/guideHome/","title":"Welcome to the Guides!","text":"<p>This will teach you how to do a variaty of things from simple MobEffects, to creating new mobs and more.</p> <p>It's recommended that you start at Getting Started if you don't know how to get started yet.</p>"},{"location":"guides/Basics/FirstModification/","title":"Your First Modification","text":"<p>Before starting it's recommended that you have a basic knowledge of Java (classes, variables, importing, etc).</p>"},{"location":"guides/Basics/FirstModification/#setup","title":"Setup","text":"<p>To get started go to the MCPReborn Github Page and download the latest version (1.20.2), and follow the instructions on the repo and come back here when you're done.</p> <p>All done? Good! Now we can start look through Minecraft's source code! To start, search for the MobEffects class, here is where we will add something new.</p>"},{"location":"guides/Basics/FirstModification/#mob-effect-creation","title":"Mob Effect Creation","text":"<p>In the MobEffects class, you should see something like: <pre><code>public static final MobEffect MOVEMENT_SPEED = register(\"speed\", (new MobEffect(MobEffectCategory.BENEFICIAL, 3402751)).addAttributeModifier(Attributes.MOVEMENT_SPEED, \"91AEAA56-376B-4498-935B-2F7F68070635\", (double)0.2F, AttributeModifier.Operation.MULTIPLY_TOTAL));\n</code></pre></p>"},{"location":"guides/Basics/FirstModification/#basic-effect","title":"Basic Effect","text":"<p>Once there we can starting adding a new effect, to get started type in:</p> <pre><code>public static final MobEffect NAME = register(\"name\", (new MobEffect(MobEffectCategory.BENEFICIAL, 3402751)));\n</code></pre> <p>This creates and registers the new effect for us to use! The <code>\"name\"</code> is the name id of the effect MAKE SURE IT NOT SOMETHING THAT ALREADY EXISTS, It WILL make a conflict if you do. Also make sure there are no special characters (_, !, ., etc.), or uppercase keys.</p> <p>The <code>new MobEffect()</code> part creates the effect itself, the <code>MobEffectCategory</code> within the <code>new MobEffect()</code> determines if its on the top row (BENEFICIAL) or bottom row (NEUTRAL/HARMFUL), the <code>3402751</code> is just the color in decimal.</p> <p>From there you can start the game, and give yourself the effect! One thing you will notice is the <code>effect.minecraft.name</code> rather then <code>name</code> for the effect display name. We'll learn how to set up resources later.</p>"},{"location":"guides/Basics/FirstModification/#attributes","title":"Attributes","text":"<p>Now to add attribute modifiers! </p> <p>Adding attributes is fairly simple, but will require a UUID Generator for saving to work.</p> <p>To start adding the attribute you want it to change add:</p> <pre><code>.addAttributeModifier(Attributes.MOVEMENT_SPEED)\n</code></pre> <p>to the end of <code>(new MobEffect(MobEffectCategory.BENEFICIAL, 3402751))</code>.</p> <p>Next you'll need to generate a new UUID (link to one above), and insert it right after the chosen attribute like so:</p> <pre><code>.addAttributeModifier(Attributes.MOVEMENT_SPEED, \"RANDOM UUID\")\n</code></pre> <p>Now to set the modifier, simply add a double for the modifier:</p> <pre><code>.addAttributeModifier(Attributes.MOVEMENT_SPEED, \"RANDOM UUID\", 1D)\n</code></pre> <p>Finally, select the <code>AttributeModifier.Operation</code> you want to use. <code>ADDITION</code> adds the value to the attribute, <code>MULTIPLY_TOTAL</code> multiplies the attribute including other modifers, and <code>MULTIPLY_BASE</code> multiplies the attribute, ignoring the other modifiers.</p> <p>After all that you should have something that looks like:</p> <pre><code>public static final MobEffect NAME = register(\"name\", (new MobEffect(MobEffectCategory.BENEFICIAL, 3402751)).addAttributeModifier(Attributes.MOVEMENT_SPEED, \"RANDOM UUID\", 1D, AttributeModifier.Operation.ADDITION));\n</code></pre> <p>Now start the game and give it a test run!</p>"},{"location":"guides/Beginner/BasicKnowledge/","title":"Basic Knowledge","text":"<p>Minecraft: Java Edition is built on Java, crazy I know, but has many systems that you should be aware of before going further.</p>"},{"location":"guides/Beginner/BasicKnowledge/#registries","title":"Registries","text":"<p>Minecraft uses a Registry System for things like mobs, blocks, items, mob effects, the works.</p> <p>When you register something, it usually has an ID at the start, these IDs cannot be the same name as another in the same registry, cannot include special characters, and cannot include uppercase keys.</p> <p>The extra info in the Registry is determined by the type of Registry it is (i.e. MobEffects have uuids and a new mob effect, mobs have a entity type builder, etc).</p>"},{"location":"guides/Beginner/BasicKnowledge/#organization","title":"Organization","text":"<p>Minecraft is organized fairly well all things considered.</p> <p>If you want to find things that typically spawn or interact with the world, you can find it in the World folder.</p> <p>It's recommended you keep things organized the way they are, it works, and trying to change it will cause more pain then needed.</p>"},{"location":"guides/Beginner/BasicKnowledge/#nbt","title":"NBT","text":"<p>NBT (or what's usually CompoundTag) is how the game stores data for items, mobs, and most things that needs data saved.</p>"},{"location":"guides/Beginner/Resources/","title":"Resources","text":"<p>Minecraft uses a \"resources\" folder for stuff like data and assets.</p> <p>If you remember from Getting Started where the MobEffect you created didn't have a tranlatable (a string that determines what text says), or an icon, this is why.</p>"},{"location":"guides/Beginner/Resources/#adding-resources","title":"Adding Resources","text":"<p>Adding resources is a fairly easy task. First, create a resources folder within the main folder. This is where the resources will be indexed and used from, as well as compile with as well.</p> <p>You'll need ALL of the base Minecraft assets within the folder as well, which you can get from here.</p> <p>From here you can start adding everything you need!</p>"},{"location":"guides/Beginner/Resources/#adding-a-translatable","title":"Adding a Translatable","text":"<p>When you see something like <code>effect.minecraft.name</code>, it means that string doesn't have a translatable within it's lang file.</p> <p>Lang files are files when have translations for any kind of text specified to have one.</p> <p>To add something to one, go to <code>resources/assets/minecraft/lang</code> Here you will find every lang file within minecraft. Now find the lang file that corresponds with your selected language (i.e. US is en_us.json).</p> <p>Here we can start adding translations.</p> <p>For example, you can add:</p> <pre><code>\"effect.minecraft.name\": \"name\",\n</code></pre> <p>to give your effect a name!</p>"},{"location":"guides/Beginner/Resources/#adding-an-icon","title":"Adding an Icon","text":"<p>For adding an icon, you will need an image to use for said icon. It MUST be a .png, or Minecraft will not recongize the file.</p> <p>To get to the MobEffect icons, go to <code>resources/assets/minecraft/textures/mob_effect</code> This is where you will add the icon to.</p> <p>Now drag you icon (or copy it) into the folder and name it the same as the ID you chose for the effect. If all goes well the effect should now have an icon rather then the placeholder black and purple square.</p>"},{"location":"reference/home/","title":"Welcome to the Reference!","text":"<p>Here you can find a reference for (almost) everything!</p> <p>Some stuff may have less info due to having little knowledge on how that specific thing works.</p> <p>Pretty much all variables are something like <code>p_21051</code>, this is normal.</p>"},{"location":"reference/Minecraft/Advancements/Advancement/","title":"Advancement","text":"<pre><code>public record Advancement(Optional&lt;ResourceLocation&gt; parent, Optional&lt;DisplayInfo&gt; display, AdvancementRewards rewards, Map&lt;String, Criterion&lt;?&gt;&gt; criteria, AdvancementRequirements requirements, boolean sendsTelemetryEvent, Optional&lt;Component&gt; name)\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#constructer","title":"Constructer","text":"<pre><code>public Advancement(Optional&lt;ResourceLocation&gt; p_299284_, Optional&lt;DisplayInfo&gt; p_301017_, AdvancementRewards p_286389_, Map&lt;String, Criterion&lt;?&gt;&gt; p_286635_, AdvancementRequirements p_300504_, boolean p_286478_) {\n    this(p_299284_, p_301017_, p_286389_, Map.copyOf(p_286635_), p_300504_, p_286478_, p_301017_.map(Advancement::decorateName));\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#decoratename","title":"decorateName","text":"<pre><code>private static Component decorateName(DisplayInfo p_300038_) {\n    Component component = p_300038_.getTitle();\n    ChatFormatting chatformatting = p_300038_.getFrame().getChatColor();\n    Component component1 = ComponentUtils.mergeStyles(component.copy(), Style.EMPTY.withColor(chatformatting)).append(\"\\n\").append(p_300038_.getDescription());\n    Component component2 = component.copy().withStyle((p_138316_) -&gt; {\n        return p_138316_.withHoverEvent(new HoverEvent(HoverEvent.Action.SHOW_TEXT, component1));\n    });\n    return ComponentUtils.wrapInSquareBrackets(component2).withStyle(chatformatting);\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#name","title":"name","text":"<pre><code>public static Component name(AdvancementHolder p_297556_) {\n    return p_297556_.value().name().orElseGet(() -&gt; {\n        return Component.literal(p_297556_.id().toString());\n    });\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#serializetojson","title":"serializeToJson","text":"<pre><code>public JsonObject serializeToJson() {\n    JsonObject jsonobject = new JsonObject();\n    this.parent.ifPresent((p_296095_) -&gt; {\n        jsonobject.addProperty(\"parent\", p_296095_.toString());\n    });\n    this.display.ifPresent((p_296097_) -&gt; {\n        jsonobject.add(\"display\", p_296097_.serializeToJson());\n    });\n    jsonobject.add(\"rewards\", this.rewards.serializeToJson());\n    JsonObject jsonobject1 = new JsonObject();\n\n    for(Map.Entry&lt;String, Criterion&lt;?&gt;&gt; entry : this.criteria.entrySet()) {\n        jsonobject1.add(entry.getKey(), entry.getValue().serializeToJson());\n    }\n\n    jsonobject.add(\"criteria\", jsonobject1);\n    jsonobject.add(\"requirements\", this.requirements.toJson());\n    jsonobject.addProperty(\"sends_telemetry_event\", this.sendsTelemetryEvent);\n    return jsonobject;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#fromjson","title":"fromJson","text":"<pre><code>public static Advancement fromJson(JsonObject p_300691_, DeserializationContext p_300053_) {\n    Optional&lt;ResourceLocation&gt; optional = p_300691_.has(\"parent\") ? Optional.of(new ResourceLocation(GsonHelper.getAsString(p_300691_, \"parent\"))) : Optional.empty();\n    Optional&lt;DisplayInfo&gt; optional1 = p_300691_.has(\"display\") ? Optional.of(DisplayInfo.fromJson(GsonHelper.getAsJsonObject(p_300691_, \"display\"))) : Optional.empty();\n    AdvancementRewards advancementrewards = p_300691_.has(\"rewards\") ? AdvancementRewards.deserialize(GsonHelper.getAsJsonObject(p_300691_, \"rewards\")) : AdvancementRewards.EMPTY;\n    Map&lt;String, Criterion&lt;?&gt;&gt; map = Criterion.criteriaFromJson(GsonHelper.getAsJsonObject(p_300691_, \"criteria\"), p_300053_);\n    if (map.isEmpty()) {\n        throw new JsonSyntaxException(\"Advancement criteria cannot be empty\");\n    } else {\n        JsonArray jsonarray = GsonHelper.getAsJsonArray(p_300691_, \"requirements\", new JsonArray());\n        AdvancementRequirements advancementrequirements;\n        if (jsonarray.isEmpty()) {\n            advancementrequirements = AdvancementRequirements.allOf(map.keySet());\n        } else {\n            advancementrequirements = AdvancementRequirements.fromJson(jsonarray, map.keySet());\n        }\n\n        boolean flag = GsonHelper.getAsBoolean(p_300691_, \"sends_telemetry_event\", false);\n        return new Advancement(optional, optional1, advancementrewards, map, advancementrequirements, flag);\n    }\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#write","title":"write","text":"<pre><code>public void write(FriendlyByteBuf p_299393_) {\n    p_299393_.writeOptional(this.parent, FriendlyByteBuf::writeResourceLocation);\n    p_299393_.writeOptional(this.display, (p_296098_, p_296099_) -&gt; {\n        p_296099_.serializeToNetwork(p_296098_);\n    });\n    this.requirements.write(p_299393_);\n    p_299393_.writeBoolean(this.sendsTelemetryEvent);\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#read","title":"read","text":"<pre><code>public static Advancement read(FriendlyByteBuf p_300670_) {\n    return new Advancement(p_300670_.readOptional(FriendlyByteBuf::readResourceLocation), p_300670_.readOptional(DisplayInfo::fromNetwork), AdvancementRewards.EMPTY, Map.of(), new AdvancementRequirements(p_300670_), p_300670_.readBoolean());\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#isroot","title":"isRoot","text":"<pre><code>public boolean isRoot() {\n    return this.parent.isEmpty();\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#builder-class","title":"Builder Class","text":""},{"location":"reference/Minecraft/Advancements/Advancement/#advancement_1","title":"advancement","text":"<pre><code>public static Advancement.Builder advancement() {\n    return (new Advancement.Builder()).sendsTelemetryEvent();\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#recipeadvancement","title":"recipeAdvancement","text":"<pre><code>public static Advancement.Builder recipeAdvancement() {\n    return new Advancement.Builder();\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#parent","title":"parent","text":"<pre><code>public Advancement.Builder parent(AdvancementHolder p_300513_) {\n    this.parent = Optional.of(p_300513_.id());\n    return this;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#parent-deprecated","title":"parent (Deprecated)","text":"<pre><code>public Advancement.Builder parent(ResourceLocation p_138397_) {\n    this.parent = Optional.of(p_138397_);\n    return this;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#display-itemstack","title":"display (ItemStack)","text":"<pre><code>public Advancement.Builder display(ItemStack p_138363_, Component p_138364_, Component p_138365_, @Nullable ResourceLocation p_138366_, FrameType p_138367_, boolean p_138368_, boolean p_138369_, boolean p_138370_) {\n    return this.display(new DisplayInfo(p_138363_, p_138364_, p_138365_, p_138366_, p_138367_, p_138368_, p_138369_, p_138370_));\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#display-itemlike","title":"display (ItemLike)","text":"<pre><code>public Advancement.Builder display(ItemLike p_138372_, Component p_138373_, Component p_138374_, @Nullable ResourceLocation p_138375_, FrameType p_138376_, boolean p_138377_, boolean p_138378_, boolean p_138379_) {\n    return this.display(new DisplayInfo(new ItemStack(p_138372_.asItem()), p_138373_, p_138374_, p_138375_, p_138376_, p_138377_, p_138378_, p_138379_));\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#display-displayinfo","title":"display (DisplayInfo)","text":"<pre><code>public Advancement.Builder display(DisplayInfo p_138359_) {\n    this.display = Optional.of(p_138359_);\n    return this;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#rewards-builder","title":"rewards (Builder)","text":"<pre><code>public Advancement.Builder rewards(AdvancementRewards.Builder p_138355_) {\n    return this.rewards(p_138355_.build());\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#rewards","title":"rewards","text":"<pre><code>public Advancement.Builder rewards(AdvancementRewards p_138357_) {\n    this.rewards = p_138357_;\n    return this;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#addcriterion","title":"addCriterion","text":"<pre><code>public Advancement.Builder addCriterion(String p_138384_, Criterion&lt;?&gt; p_138385_) {\n    this.criteria.put(p_138384_, p_138385_);\n    return this;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#requirements-strategy","title":"requirements (Strategy)","text":"<pre><code>public Advancement.Builder requirements(AdvancementRequirements.Strategy p_298091_) {\n    this.requirementsStrategy = p_298091_;\n    return this;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#requirements","title":"requirements","text":"<pre><code>public Advancement.Builder requirements(AdvancementRequirements p_300756_) {\n    this.requirements = Optional.of(p_300756_);\n    return this;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#sendstelemetryevent","title":"sendsTelemetryEvent","text":"<pre><code>public Advancement.Builder sendsTelemetryEvent() {\n    this.sendsTelemetryEvent = true;\n    return this;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#build","title":"build","text":"<pre><code>public AdvancementHolder build(ResourceLocation p_138404_) {\n    Map&lt;String, Criterion&lt;?&gt;&gt; map = this.criteria.buildOrThrow();\n    AdvancementRequirements advancementrequirements = this.requirements.orElseGet(() -&gt; {\n        return this.requirementsStrategy.create(map.keySet());\n    });\n    return new AdvancementHolder(p_138404_, new Advancement(this.parent, this.display, this.rewards, map, advancementrequirements, this.sendsTelemetryEvent));\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/Advancement/#save","title":"save","text":"<pre><code>public AdvancementHolder save(Consumer&lt;AdvancementHolder&gt; p_138390_, String p_138391_) {\n    AdvancementHolder advancementholder = this.build(new ResourceLocation(p_138391_));\n    p_138390_.accept(advancementholder);\n    return advancementholder;\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/AdvancementHolder/","title":"Advancement Holder","text":"<pre><code>public record AdvancementHolder(ResourceLocation id, Advancement value)\n</code></pre>"},{"location":"reference/Minecraft/Advancements/AdvancementHolder/#write","title":"write","text":"<pre><code>public void write(FriendlyByteBuf p_299066_) {\n    p_299066_.writeResourceLocation(this.id);\n    this.value.write(p_299066_);\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/AdvancementHolder/#read","title":"read","text":"<pre><code>public static AdvancementHolder read(FriendlyByteBuf p_299642_) {\n    return new AdvancementHolder(p_299642_.readResourceLocation(), Advancement.read(p_299642_));\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/AdvancementHolder/#equals","title":"equals","text":"<pre><code>public boolean equals(Object p_298719_) {\n    if (this == p_298719_) {\n        return true;\n    } else {\n        if (p_298719_ instanceof AdvancementHolder) {\n            AdvancementHolder advancementholder = (AdvancementHolder)p_298719_;\n            if (this.id.equals(advancementholder.id)) {\n               return true;\n            }\n        }\n\n        return false;\n    }\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/AdvancementHolder/#hashcode","title":"hashCode","text":"<pre><code>public int hashCode() {\n    return this.id.hashCode();\n}\n</code></pre>"},{"location":"reference/Minecraft/Advancements/AdvancementHolder/#tostring","title":"toString","text":"<pre><code>public String toString() {\n    return this.id.toString();\n}\n</code></pre>"}]}